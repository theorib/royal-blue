DROP DATABASE IF EXISTS totesys_db;
CREATE DATABASE totesys_db;

-- Connect to the newly created database
\c totesys_db

CREATE TABLE "sales_order" (
  "sales_order_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "created_at" timestamp NOT NULL DEFAULT (current_timestamp),
  "last_updated" timestamp NOT NULL DEFAULT (current_timestamp),
  "design_id" int NOT NULL,
  "staff_id" int NOT NULL,
  "counterparty_id" int NOT NULL,
  "units_sold" int NOT NULL,
  "unit_price" numeric NOT NULL,
  "currency_id" int NOT NULL,
  "agreed_delivery_date" varchar NOT NULL,
  "agreed_payment_date" varchar NOT NULL,
  "agreed_delivery_location_id" int NOT NULL
);

CREATE TABLE "design" (
  "design_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "created_at" timestamp NOT NULL DEFAULT (current_timestamp),
  "last_updated" timestamp NOT NULL DEFAULT (current_timestamp),
  "design_name" varchar NOT NULL,
  "file_location" varchar NOT NULL,
  "file_name" varchar NOT NULL
);

CREATE TABLE "currency" (
  "currency_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "currency_code" varchar[3] NOT NULL,
  "created_at" timestamp NOT NULL DEFAULT (current_timestamp),
  "last_updated" timestamp NOT NULL DEFAULT (current_timestamp)
);

CREATE TABLE "staff" (
  "staff_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "first_name" varchar NOT NULL,
  "last_name" varchar NOT NULL,
  "department_id" int NOT NULL,
  "email_address" varchar NOT NULL,
  "created_at" timestamp NOT NULL DEFAULT (current_timestamp),
  "last_updated" timestamp NOT NULL DEFAULT (current_timestamp)
);

CREATE TABLE "counterparty" (
  "counterparty_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "counterparty_legal_name" varchar NOT NULL,
  "legal_address_id" int NOT NULL,
  "commercial_contact" varchar,
  "delivery_contact" varchar,
  "created_at" timestamp NOT NULL DEFAULT (current_timestamp),
  "last_updated" timestamp NOT NULL DEFAULT (current_timestamp)
);

CREATE TABLE "address" (
  "address_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "address_line_1" varchar NOT NULL,
  "address_line_2" varchar,
  "district" varchar,
  "city" varchar NOT NULL,
  "postal_code" varchar NOT NULL,
  "country" varchar NOT NULL,
  "phone" varchar NOT NULL,
  "created_at" timestamp NOT NULL DEFAULT (current_timestamp),
  "last_updated" timestamp NOT NULL DEFAULT (current_timestamp)
);

CREATE TABLE "department" (
  "department_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "department_name" varchar NOT NULL,
  "location" varchar,
  "manager" varchar,
  "created_at" timestamp NOT NULL DEFAULT (current_timestamp),
  "last_updated" timestamp NOT NULL DEFAULT (current_timestamp)
);

CREATE TABLE "purchase_order" (
  "purchase_order_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "created_at" timestamp NOT NULL DEFAULT (current_timestamp),
  "last_updated" timestamp NOT NULL DEFAULT (current_timestamp),
  "staff_id" int NOT NULL,
  "counterparty_id" int NOT NULL,
  "item_code" varchar NOT NULL,
  "item_quantity" int NOT NULL,
  "item_unit_price" numeric NOT NULL,
  "currency_id" int NOT NULL,
  "agreed_delivery_date" varchar NOT NULL,
  "agreed_payment_date" varchar NOT NULL,
  "agreed_delivery_location_id" int NOT NULL
);

CREATE TABLE "payment_type" (
  "payment_type_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "payment_type_name" varchar NOT NULL,
  "created_at" timestamp NOT NULL DEFAULT (current_timestamp),
  "last_updated" timestamp NOT NULL DEFAULT (current_timestamp)
);

CREATE TABLE "payment" (
  "payment_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "created_at" timestamp NOT NULL DEFAULT (current_timestamp),
  "last_updated" timestamp NOT NULL DEFAULT (current_timestamp),
  "transaction_id" int NOT NULL,
  "counterparty_id" int NOT NULL,
  "payment_amount" numeric NOT NULL,
  "currency_id" int NOT NULL,
  "payment_type_id" int NOT NULL,
  "paid" boolean NOT NULL,
  "payment_date" varchar NOT NULL,
  "company_ac_number" int NOT NULL,
  "counterparty_ac_number" int NOT NULL
);

CREATE TABLE "transaction" (
  "transaction_id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "transaction_type" varchar NOT NULL,
  "sales_order_id" int,
  "purchase_order_id" int,
  "created_at" timestamp NOT NULL DEFAULT (current_timestamp),
  "last_updated" timestamp NOT NULL DEFAULT (current_timestamp)
);

COMMENT ON COLUMN "sales_order"."units_sold" IS 'value 1000 - 100000';

COMMENT ON COLUMN "sales_order"."unit_price" IS 'value 2.00 - 4.00';

COMMENT ON COLUMN "sales_order"."agreed_delivery_date" IS 'format is yyyy-mm-dd';

COMMENT ON COLUMN "sales_order"."agreed_payment_date" IS 'format is yyyy-mm-dd';

COMMENT ON COLUMN "design"."file_location" IS 'directory location';

COMMENT ON COLUMN "design"."file_name" IS 'file name';

COMMENT ON COLUMN "currency"."currency_code" IS 'three letter code eg GBP';

COMMENT ON COLUMN "staff"."email_address" IS 'must be valid email address';

COMMENT ON COLUMN "counterparty"."commercial_contact" IS 'person name, nullable';

COMMENT ON COLUMN "counterparty"."delivery_contact" IS 'person name, nullable';

COMMENT ON COLUMN "address"."address_line_2" IS 'nullable';

COMMENT ON COLUMN "address"."district" IS 'nullable';

COMMENT ON COLUMN "address"."phone" IS 'valid phone number';

COMMENT ON COLUMN "department"."location" IS 'nullable';

COMMENT ON COLUMN "department"."manager" IS 'nullable';

COMMENT ON COLUMN "purchase_order"."item_quantity" IS 'value between 1 and 1000';

COMMENT ON COLUMN "purchase_order"."item_unit_price" IS 'value 3-1000';

COMMENT ON COLUMN "purchase_order"."agreed_delivery_date" IS 'format is yyyy-mm-dd';

COMMENT ON COLUMN "purchase_order"."agreed_payment_date" IS 'format is yyyy-mm-dd';

COMMENT ON COLUMN "payment_type"."payment_type_name" IS 'one of SALES_RECEIPT SALESREFUND PURCHASE_PAYMENT PURCHASE REFUND';

COMMENT ON COLUMN "payment"."payment_amount" IS 'value 1 - 1000000';

COMMENT ON COLUMN "payment"."payment_date" IS 'format is yyyy-mm-dd';

COMMENT ON COLUMN "payment"."company_ac_number" IS '8 digits';

COMMENT ON COLUMN "payment"."counterparty_ac_number" IS '8 digits';

COMMENT ON COLUMN "transaction"."transaction_type" IS 'one of SALE or PURCHASE';

COMMENT ON COLUMN "transaction"."sales_order_id" IS 'nullable depending on transaction type';

COMMENT ON COLUMN "transaction"."purchase_order_id" IS 'nullable depending on transaction type';

ALTER TABLE "sales_order" ADD FOREIGN KEY ("design_id") REFERENCES "design" ("design_id");

ALTER TABLE "sales_order" ADD FOREIGN KEY ("staff_id") REFERENCES "staff" ("staff_id");

ALTER TABLE "sales_order" ADD FOREIGN KEY ("counterparty_id") REFERENCES "counterparty" ("counterparty_id");

ALTER TABLE "sales_order" ADD FOREIGN KEY ("currency_id") REFERENCES "currency" ("currency_id");

ALTER TABLE "sales_order" ADD FOREIGN KEY ("agreed_delivery_location_id") REFERENCES "address" ("address_id");

ALTER TABLE "staff" ADD FOREIGN KEY ("department_id") REFERENCES "department" ("department_id");

ALTER TABLE "counterparty" ADD FOREIGN KEY ("legal_address_id") REFERENCES "address" ("address_id");

ALTER TABLE "purchase_order" ADD FOREIGN KEY ("staff_id") REFERENCES "staff" ("staff_id");

ALTER TABLE "purchase_order" ADD FOREIGN KEY ("counterparty_id") REFERENCES "counterparty" ("counterparty_id");

ALTER TABLE "purchase_order" ADD FOREIGN KEY ("currency_id") REFERENCES "currency" ("currency_id");

ALTER TABLE "purchase_order" ADD FOREIGN KEY ("agreed_delivery_location_id") REFERENCES "address" ("address_id");

ALTER TABLE "payment" ADD FOREIGN KEY ("transaction_id") REFERENCES "transaction" ("transaction_id");

ALTER TABLE "payment" ADD FOREIGN KEY ("counterparty_id") REFERENCES "counterparty" ("counterparty_id");

ALTER TABLE "payment" ADD FOREIGN KEY ("currency_id") REFERENCES "currency" ("currency_id");

ALTER TABLE "payment" ADD FOREIGN KEY ("payment_type_id") REFERENCES "payment_type" ("payment_type_id");

ALTER TABLE "transaction" ADD FOREIGN KEY ("sales_order_id") REFERENCES "sales_order" ("sales_order_id");

ALTER TABLE "transaction" ADD FOREIGN KEY ("purchase_order_id") REFERENCES "purchase_order" ("purchase_order_id");
